plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'maven-publish'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

android {
    compileSdk rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdk rootProject.ext.android.minSdkVersion
        targetSdk rootProject.ext.android.compileSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant("release")
    }
}

afterEvaluate {
    publishing {
        def versionName = "0.0.1"
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.zch.base'
                artifactId = 'zchBase'
                version = versionName
            }
        }

        repositories {
            maven {
                def baseUrl = buildDir.getParent()
                def releaseUrl = "$baseUrl/repos/releases"
                def snapshotsUrl = "$baseUrl/repos/snapshots"
                url = version.endsWith("SNAPSHOT") ? snapshotsUrl : releaseUrl
            }
        }
    }
}

dependencies {
    implementation project(':module_utils')
    api rootProject.ext.ktxLibs
    api rootProject.ext.commonUILibs
    api rootProject.ext.jetpackLibs
    api rootProject.ext.otherLibs
    api rootProject.ext.netLibs
}